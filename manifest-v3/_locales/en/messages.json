{
    "extensionName": {
        "message": "Soupcan",
        "description": "Name of the extension."
    },
    "extensionDescription": {
        "message": "Support trans people and improving your experience on Twitter",
        "description": "Description of the extension."
    },
    "actionReportTransphobe": {
        "message": "üçÖ Report transphobe",
        "description": "Context menu action for reporting a transphobe."
    },
    "searchTweets": {
        "message": "üîç Search tweets for gender-related keywords",
        "description": "Context menu action for searching a user's tweets for gender-related keywords."
    },
    "actionAppealLabel": {
        "message": "üòá Appeal label",
        "description": "Context menu action for appealing a user's label."
    },
    "actionRerunSetup": {
        "message": "üìê Re-run setup",
        "description": "Context menu action for running the setup process again."
    },
    "actionUpdateDatabase": {
        "message": "üåê Update database",
        "description": "Context menu action for updating the extension's database."
    },
    "actionModerateReports": {
        "message": "üë©‚Äç‚öñÔ∏è Moderate reports",
        "description": "Context menu action to review and moderate user reports."
    },
    "actionOptions": {
        "message": "‚öôÔ∏è Options",
        "description": "Context menu action to change extension options."
    },
    "reportReasonInstructions": {
        "message": "<h2>üçÖ Report @$ID$</h2><p>You can provide reasoning for your report here, if you think it may help verify your report, including links to tweets, etc. It's optional, so if it's obvious, feel free to skip it.</p>",
        "description": "Instructions given to the user on providing a report reason.",
        "placeholders": {
            "id" : {
                "content" : "$1",
                "example" : "bethylamine"
            }
        }
    },
    "userAlreadyRed": {
        "message": "@$ID$ is already reported, there is no need to report again. üçÖü•´",
        "description": "Error message when you try to report someone who is already marked.",
        "placeholders": {
            "id" : {
                "content" : "$1",
                "example" : "bethylamine"
            }
        }
    },
    "sendReportButton": {
        "message": "Send report",
        "description": "Button that sends the report in."
    },
    "authorizationInvalid": {
        "message": "Authorization invalid, please log in again.",
        "description": "Error message when failing to send a command to the server because the credentials are wrong."
    },
    "invalidReportTarget": {
        "message": "Invalid report target!",
        "description":"Error message shown when trying to report something that is not a valid target (user)."
    },
    "invalidAppealTarget": {
        "message": "Invalid appeal target",
        "description": "Error message shown when trying to appeal something that is not a valid target (user)."
    },
    "invalidTarget": {
        "message": "Invalid target",
        "description": "Error message shown when trying to execute an action on something that is not a valid target (user)."
    },
    "databaseDownloading": {
        "message": "Database downloading...",
        "description": "Tooltip shown when starting to download the database."
    },
    "databaseUpdated": {
        "message": "Database updated!",
        "description": "Success tooltip message when the database was downloaded."
    },
    "databaseUpdateFailed": {
        "message": "Database update failed! $ERROR$",
        "description": "Error message when the database update fails.",
        "placeholders": {
            "error" : {
                "content" : "$1",
                "example" : "TypeError: Cannot read properties of null (reading 'cloneNode')"
            }
        }
    },
    "genericError": {
        "message": "Error: $ERROR$",
        "description": "Generic error message when something fails.",
        "placeholders": {
            "error" : {
                "content" : "$1",
                "example" : "TypeError: Cannot read properties of null (reading 'cloneNode')"
            }
        }
    },
    "resendingReport": {
        "message": "Re-sending pending report for @$ID$...",
        "description": "Tooltip message shown when re-sending a pending report.",
        "placeholders": {
            "id" : {
                "content" : "$1",
                "example" : "bethylamine"
            }
        }
    },
    "sendingReport": {
        "message": "Sending report: @$ID$",
        "description": "Tooltip message shown when sending a new report.",
        "placeholders": {
            "id" : {
                "content" : "$1",
                "example" : "bethylamine"
            }
        }
    },
    "reportReceived": {
        "message": "Report received: @$ID$",
        "description": "Tooltip message shown when a report was accepted by the server.",
        "placeholders": {
            "id" : {
                "content" : "$1",
                "example" : "bethylamine"
            }
        }
    },
    "reportSubmissionFailed": {
        "message": "Failed to submit report:",
        "description": "Tooltip error message shown when a report could not be submitted."
    },
    "sendingAppeal": {
        "message": "Sending appeal: @$ID$",
        "description": "Tooltip message shown when sending a new appeal.",
        "placeholders": {
            "id" : {
                "content" : "$1",
                "example" : "bethylamine"
            }
        }
    },
    "appealReceived": {
        "message": "Appeal received: @$ID$",
        "description": "Tooltip message shown when an appeal was accepted by the server.",
        "placeholders": {
            "id" : {
                "content" : "$1",
                "example" : "bethylamine"
            }
        }
    },
    "appealSubmissionFailed": {
        "message": "Failed to submit appeal:",
        "description": "Tooltip error message shown when an appeal could not be submitted."
    },
    "invalidReportType": {
        "message": "Invalid report type: $TYPE$",
        "description": "Error message shown if an unexpected report type (not report or appeal) was given.",
        "placeholders": {
            "type" : {
                "content" : "$1",
                "example" : "trans-friendly"
            }
        }
    },
    "nothingToAppeal": {
        "message": "Nothing to appeal",
        "description": "Message shown to non-moderators who try to appeal a user who isn't marked."
    },
    "extensionContextInvalidated": {
        "message": "Soupcan was unloaded or refreshed, and will not work until the page is refreshed. Would you like to refresh the page now?",
        "description": "Error message to show when the extension was reloaded but the page hasn't been reloaded. (This causes the extension to stop working)"
    },
    "transphobeCounter": {
        "message": "Transphobe counter",
        "description": "Heading for the panel that counts transphobes in a user's followers/following pages."
    },
    "counterName_followers": {
        "message": "Followers",
        "description": "Subheading for transphobe counter."
    },
    "counterName_following": {
        "message": "Following",
        "description": "Subheading for transphobe counter."
    },
    "scrollInstructions": {
        "message": "(scroll down to count more)",
        "description": "Instructions for counting more transphobes in followers/following pages"
    },
    "toast_label_tip": {
        "message": "Action",
        "description": "Header shown for a tooltip when an action has been taken"
    },
    "toast_label_info": {
        "message": "Info",
        "description": "Header shown for a tooltip when information is displayed to the user"
    },
    "toast_label_success": {
        "message": "Success",
        "description": "Header shown for a tooltip when an action succeeds"
    },
    "toast_label_warning": {
        "message": "Warning",
        "description": "Header shown for a tooltip when an invalid action is taken"
    },
    "toast_label_alert": {
        "message": "Error",
        "description": "Header shown for a tooltip when a failure occurs"
    },
    "toast_label_confirm": {
        "message": "Question",
        "description": "Header shown for a tooltip when an yes/no response is required"
    },
    "toast_label_confirmOk": {
        "message": "Yes",
        "description": "Label for confirmation/yes button in the confirmation dialog"
    },
    "toast_label_confirmCancel": {
        "message": "No",
        "description": "Label for cancel/no button in the confirmation dialog"
    },
    "toast_label_async": {
        "message": "Please wait...",
        "description": "Label for when waiting on a request sent to the server"
    },
    "serverFailure": {
        "message": "Server failure",
        "description": "Short popup message that displays when an action was not successfully processed by the Soupcan server"
    }
}